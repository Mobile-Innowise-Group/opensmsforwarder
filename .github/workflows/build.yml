name: Build, run static analysis, run tests, generate release APK, AAB

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
  RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
  RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
  FEEDBACK_DB_PATH: ${{ secrets.FEEDBACK_DB_PATH }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out branch
        uses: actions/checkout@v4

      - name: Setup Java (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run static code analysis
        run: ./gradlew detekt

      - name: Decode Release Keystore
        env:
          ENCODED_RELEASE_STRING: ${{ secrets.RELEASE_KEY_BASE_64 }}
        run: |
          echo $ENCODED_RELEASE_STRING > release-keystore-b64.txt
          base64 -di release-keystore-b64.txt > release.jks

      - name: Decode Debug Keystore
        env:
          ENCODED_DEBUG_STRING: ${{ secrets.DEBUG_KEY_BASE_64 }}
          ENCODED_DEBUG_PROPERTIES: ${{ secrets.DEBUG_KEY_PROPERTIES }}
        run: |
          echo $ENCODED_DEBUG_STRING > debug-keystore-b64.txt
          base64 -di debug-keystore-b64.txt > app/keystore/debug/debug.jks
          echo $ENCODED_DEBUG_PROPERTIES > debug-key-properties-b64.txt
          base64 -di debug-key-properties-b64.txt > app/keystore/debug/debug.properties

      - name: Load Google Service file
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA | base64 -di > app/google-services.json

      - name: Build
        run: ./gradlew build

      - name: Check Room integrity
        run: git diff --exit-code -- app/schemas

      - name: Run unit tests
        run: ./gradlew test

      - name: Set up Android SDK
        if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
        uses: android-actions/setup-android@v3

      - name: Run instrumentation Tests
        if: github.ref == 'refs/heads/main' || github.event.pull_request.base.ref == 'main'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel
          script: ./gradlew connectedCheck

      - name: Build Release apk
        run: ./gradlew assembleRelease --stacktrace

      - name: Build Release bundle
        run: ./gradlew bundleRelease --stacktrace

      - name: Get release apk file path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Get release aab file path
        id: releaseAab
        run: echo "aabfile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_OUTPUT

      - name: Upload Release APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk-artifacts
          path: ${{ steps.releaseApk.outputs.apkfile }}

      - name: Upload Release AAB to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-aab-artifacts
          path: ${{ steps.releaseAab.outputs.aabfile }}